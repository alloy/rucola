* The activesupport gem messes up the require stuff in dependencies.rb.

* Move MainMenu.nib to app/views

* The fsevents test "should run the user specified block when one of the paths that was specified is modified", sometimes randomly fails.

* Need to refactor the rc freeze tasks with the xcode:frameworks tasks.

* Choose between Notifications #notify_on and #once.

* add caching to notification name lookup

* rake ib:update doesn't yet update from model files. The question is, should we allow that,
  or should people handle interaction with the view in the controller anyways...?

* Did some restructuring of the dir layout with regards to controllers and initialize_hooks (rev 42).
  Should probably look if the require structure is still ok... Justin knows about this.

* Create tests for initializer.rb.

* Create templates for testing in either TestUnit, TestSpec or rSpec.
  I don't use rSpec anymore atm, so I (Eloy) will first focus on TestUnit & TestSpec.
  Actually I will just move it to test/spec.

* No need to continuously rebuild your application when just changing a few lines of Ruby.
  Still does xcodebuild for the build task, so add a check if the xcode project was updated,
  if not then simply run the existing build.

* Allow transparent packaging.  Developers need only worry about creating their application 
  and basic configuration not the innards of packaging and releasing. 

  config.objc_frameworks << ['Webkit', 'Quartz']
  config.include_dirs << %w(models controllers lib)

* Create rspec testing plugin

* Create test/spec testing plugin

* Create test/unit testing plugin

* Allow plugins to be installed as gems with a config/dependencies.rb like merb
